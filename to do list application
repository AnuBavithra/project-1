<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Personalized To-Do List</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f7f6;
      margin: 0;
      padding: 0;
    }

    .container {
      width: 80%;
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    h1 {
      text-align: center;
    }

    #task-form {
      display: flex;
      margin-bottom: 20px;
    }

    #task-input {
      flex-grow: 1;
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    button {
      padding: 10px 20px;
      font-size: 16px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    button:hover {
      background-color: #45a049;
    }

    #task-list {
      list-style-type: none;
      padding: 0;
    }

    #task-list li {
      background-color: #f9f9f9;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 4px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    button.delete-btn {
      background-color: #e74c3c;
      border: none;
      color: white;
      padding: 5px 10px;
      border-radius: 4px;
      cursor: pointer;
    }

    button.delete-btn:hover {
      background-color: #c0392b;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Personalized To-Do List</h1>
    <form id="task-form">
      <input type="text" id="task-input" placeholder="Enter a new task" required>
      <button type="submit">Add Task</button>
    </form>
    
    <div id="tasks-container">
      <ul id="task-list">
        <!-- Tasks will be listed here -->
      </ul>
    </div>
  </div>

  <script>
    // Function to load tasks from localStorage
    function loadTasks() {
      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
      const taskList = document.getElementById('task-list');
      taskList.innerHTML = ''; // Clear current task list

      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.innerHTML = `
          ${task.text}
          <button class="delete-btn" onclick="deleteTask(${index})">Delete</button>
        `;
        taskList.appendChild(li);
      });
    }

    // Function to add a task
    function addTask(event) {
      event.preventDefault();
      
      const taskInput = document.getElementById('task-input');
      const taskText = taskInput.value.trim();

      if (taskText !== '') {
        const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
        tasks.push({ text: taskText });
        localStorage.setItem('tasks', JSON.stringify(tasks));
        taskInput.value = ''; // Clear the input
        loadTasks(); // Reload the task list
      }
    }

    // Function to delete a task
    function deleteTask(index) {
      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
      tasks.splice(index, 1); // Remove task from array
      localStorage.setItem('tasks', JSON.stringify(tasks));
      loadTasks(); // Reload the task list
    }

    // Event listener for adding tasks
    document.getElementById('task-form').addEventListener('submit', addTask);

    // Load tasks when the page is loaded
    window.onload = loadTasks;
  </script>
</body>
</html>
